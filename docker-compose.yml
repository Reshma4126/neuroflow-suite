
services:
  mongodb:
    image: mongo:7
    container_name: neuroflow-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: neuroflow_admin
      MONGO_INITDB_ROOT_PASSWORD: secure_password_123
      MONGO_INITDB_DATABASE: neuroflow_db
    volumes:
      - mongodb-data:/data/db
    networks:
      - neuroflow-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    container_name: neuroflow-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_ADMINUSERNAME: neuroflow_admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secure_password_123
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: hackathon2025
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - neuroflow-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: neuroflow-backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://neuroflow_admin:secure_password_123@mongodb:27017/neuroflow_db?authSource=admin
      JWT_SECRET: neuroflow_production_secret_key_12345
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - neuroflow-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb-data:

networks:
  neuroflow-network:
    driver: bridge
